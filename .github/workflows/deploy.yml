name: CI/CD Pipeline for Next.js App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Increase the timeout limit to 60 minutes

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Node.js to install dependencies and build the app
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        yarn install
        yarn build

    # Step 3: Install Docker Compose
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    # Step 4: Transfer files to EC2
    - name: Copy files via SSH
      uses: appleboy/scp-action@v0.1.5
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "."
        target: "/home/ec2-user/app"
      env:
        DEBUG: "true"  # This might trigger more detailed logs from the action
    # Step 5: Deploy on EC2 instance
    - name: Deploy with SSH
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ec2-user/app
          docker-compose down
          docker-compose up -d --build
